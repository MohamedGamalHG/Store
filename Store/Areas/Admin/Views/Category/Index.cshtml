@model IEnumerable<Store.Models.Category>

@{
    ViewData["Title"] = "Index";
    int counter = 1;
    string urlAction = Context.Request.Path.ToString().Split("/")[2];
    urlAction = $"{urlAction[0].ToString().ToUpper()}{urlAction.Substring(1)}";


}


<a class="btn btn-primary d-block" asp-action="Create">Create New @urlAction</a>



<table class="table col-lg-12 col-md-12 mt-3">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Action</th>

    </tr>
  </thead>
  <tbody>
      
      @foreach(var item in Model)
      {
        <tr>
           <th scope="row">@(counter++)</th>
          <td>@item.Name</td>
          <td>
             <a asp-action="Edit" asp-route-id = "@item.Id" class="btn btn-primary" >Edit</a>
             <a asp-action="Delete" asp-route-id = "@item.Id" class="btn btn-danger del" data-id="@item.Id">Delete</a>
          </td>
        </tr>
      }
    
  </tbody>
</table>



@section Scripts
{
    <script>
        $(document).ready(function () {
            $(".del").on("click", function (e) {
                e.preventDefault();
                var id = $(this).attr("data-id");
                var url = '@Url.Action("Delete")' + '/' + id;
                var hideRow = $(this).closest('tr');
                $.ajax({
                    type: 'DELETE',
                    url: url,                   
                    success: function (response) {
                        if(response.status == true)
                            hideRow.hide();
                    },
                    error: function (response) {
                        alert("something went wrong")
                    }
                })
            })
        })
    </script>
}

@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table> *@
